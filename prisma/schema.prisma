// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id               String      @id @default(cuid())
  orderNumber      String      @unique
  qrCodeId         String?
  email            String
  firstName        String
  lastName         String
  address          String
  city             String
  state            String
  zipCode          String
  country          String
  phone            String
  shippingMethod   String
  subtotal         Int
  shipping         Int
  tax              Int         @default(0)
  taxRate          Float       @default(0)
  total            Int
  status           String      @default("pending")
  qrCodeGenerated  Boolean     @default(false) // this is used to check if the QR code has been generated and do not generate more for the same order
  paymentIntentId  String      @unique
  stripeCustomerId String?
  items            OrderItem[]
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
  printfulOrderId  String?
}

model OrderItem {
  id           String   @id @default(cuid())
  orderId      String
  order        Order    @relation(fields: [orderId], references: [id])
  productId    String
  productTitle String
  variantId    String
  variantTitle String
  price        Int
  quantity     Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  qrCodeId     String?  @unique
  qrCode       Qrcode?
}

model User {
  id        String   @id @default(uuid())
  firstname String?
  lastname  String?
  phone     String?
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  password  String?
  smsCode   String?
  Qrcodes   Qrcode[]
  Designs   Design[]
  isActive  Boolean  @default(true)
  role      Role     @default(USER)
}

enum Role {
  USER
  ADMIN
}

//multiple design per Quser, it can be stored and assigned to the QR tshirt 
//you can have your own messages or design ready to asign
model Design {
  id        String   @id @default(uuid())
  name      String
  html      String?
  data      String?
  type      QrType   @default(TEXT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

//current T-shirt QR code
model Qrcode {
  id          String     @id @default(uuid())
  urlCode     String?
  user        User?      @relation(fields: [userId], references: [id])
  userId      String?
  type        QrType     @default(TEXT)
  html        String?    @default("Hello World")
  data        String?    @default("{\"background\":\"linear-gradient(to bottom, #0b1480 0%, #020638 100%)\"}")
  activated   Boolean    @default(false)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  orderItem   OrderItem? @relation(fields: [orderItemId], references: [id])
  orderItemId String?    @unique
}

enum QrType {
  REDIRECTION
  CONTACT
  PAYPAL
  CASHAPP
  TEXT
  GIFT
  VIDEO
}
